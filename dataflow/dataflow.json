{
	"name": "dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Ds_dataflow_input",
						"type": "DatasetReference"
					},
					"name": "sourcecustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "sinkcustomer"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          Name as string,",
				"          {Given Name} as string,",
				"          {Additional Name} as string,",
				"          {Family Name} as string,",
				"          {Yomi Name} as string,",
				"          {Given Name Yomi} as string,",
				"          {Additional Name Yomi} as string,",
				"          {Family Name Yomi} as string,",
				"          {Name Prefix} as string,",
				"          {Name Suffix} as string,",
				"          Initials as string,",
				"          Nickname as string,",
				"          {Short Name} as string,",
				"          {Maiden Name} as string,",
				"          Birthday as string,",
				"          Gender as string,",
				"          Location as string,",
				"          {Billing Information} as string,",
				"          {Directory Server} as string,",
				"          Mileage as string,",
				"          Occupation as string,",
				"          Hobby as string,",
				"          Sensitivity as string,",
				"          Priority as string,",
				"          Subject as string,",
				"          Notes as string,",
				"          Language as string,",
				"          Photo as string,",
				"          {Group Membership} as string,",
				"          {E-mail 1 - Type} as string,",
				"          {E-mail 1 - Value} as string,",
				"          {E-mail 2 - Type} as string,",
				"          {E-mail 2 - Value} as string,",
				"          {Phone 1 - Type} as string,",
				"          {Phone 1 - Value} as string,",
				"          {Phone 2 - Type} as string,",
				"          {Phone 2 - Value} as string,",
				"          {Phone 3 - Type} as string,",
				"          {Phone 3 - Value} as string,",
				"          {Address 1 - Type} as string,",
				"          {Address 1 - Formatted} as string,",
				"          {Address 1 - Street} as string,",
				"          {Address 1 - City} as string,",
				"          {Address 1 - PO Box} as string,",
				"          {Address 1 - Region} as string,",
				"          {Address 1 - Postal Code} as string,",
				"          {Address 1 - Country} as string,",
				"          {Address 1 - Extended Address} as string,",
				"          {Organization 1 - Type} as string,",
				"          {Organization 1 - Name} as string,",
				"          {Organization 1 - Yomi Name} as string,",
				"          {Organization 1 - Title} as string,",
				"          {Organization 1 - Department} as string,",
				"          {Organization 1 - Symbol} as string,",
				"          {Organization 1 - Location} as string,",
				"          {Organization 1 - Job Description} as string,",
				"          {Website 1 - Type} as string,",
				"          {Website 1 - Value} as string,",
				"          {Website 2 - Type} as string,",
				"          {Website 2 - Value} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcecustomer",
				"sourcecustomer sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Name as string,",
				"          {Given Name} as string,",
				"          {Additional Name} as string,",
				"          {Family Name} as string,",
				"          {Yomi Name} as string,",
				"          {Given Name Yomi} as string,",
				"          {Additional Name Yomi} as string,",
				"          {Family Name Yomi} as string,",
				"          {Name Prefix} as string,",
				"          {Name Suffix} as string,",
				"          Initials as string,",
				"          Nickname as string,",
				"          {Short Name} as string,",
				"          {Maiden Name} as string,",
				"          Birthday as string,",
				"          Gender as string,",
				"          Location as string,",
				"          {Billing Information} as string,",
				"          {Directory Server} as string,",
				"          Mileage as string,",
				"          Occupation as string,",
				"          Hobby as string,",
				"          Sensitivity as string,",
				"          Priority as string,",
				"          Subject as string,",
				"          Notes as string,",
				"          Language as string,",
				"          Photo as string,",
				"          {Group Membership} as string,",
				"          {E-mail 1 - Type} as string,",
				"          {E-mail 1 - Value} as string,",
				"          {E-mail 2 - Type} as string,",
				"          {E-mail 2 - Value} as string,",
				"          {Phone 1 - Type} as string,",
				"          {Phone 1 - Value} as string,",
				"          {Phone 2 - Type} as string,",
				"          {Phone 2 - Value} as string,",
				"          {Phone 3 - Type} as string,",
				"          {Phone 3 - Value} as string,",
				"          {Address 1 - Type} as string,",
				"          {Address 1 - Formatted} as string,",
				"          {Address 1 - Street} as string,",
				"          {Address 1 - City} as string,",
				"          {Address 1 - PO Box} as string,",
				"          {Address 1 - Region} as string,",
				"          {Address 1 - Postal Code} as string,",
				"          {Address 1 - Country} as string,",
				"          {Address 1 - Extended Address} as string,",
				"          {Organization 1 - Type} as string,",
				"          {Organization 1 - Name} as string,",
				"          {Organization 1 - Yomi Name} as string,",
				"          {Organization 1 - Title} as string,",
				"          {Organization 1 - Department} as string,",
				"          {Organization 1 - Symbol} as string,",
				"          {Organization 1 - Location} as string,",
				"          {Organization 1 - Job Description} as string,",
				"          {Website 1 - Type} as string,",
				"          {Website 1 - Value} as string,",
				"          {Website 2 - Type} as string,",
				"          {Website 2 - Value} as string",
				"     ),",
				"     partitionFileNames:['priyanka'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkcustomer"
			]
		}
	}
}